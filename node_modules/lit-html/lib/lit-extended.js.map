{"version":3,"file":"lit-extended.js","sourceRoot":"","sources":["../src/lib/lit-extended.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, defaultPartCallback, getValue, Part, render as baseRender, TemplateInstance, TemplatePart, TemplateResult} from '../lit-html.js';\n\nexport {html} from '../lit-html.js';\n\n/**\n *\n * @param result Renders a `TemplateResult` to a container using the\n * `extendedPartCallback` PartCallback, which allows templates to set\n * properties and declarative event handlers.\n *\n * Properties are set by default, instead of attributes. Attribute names in\n * lit-html templates preserve case, so properties are case sensitive. If an\n * expression takes up an entire attribute value, then the property is set to\n * that value. If an expression is interpolated with a string or other\n * expressions then the property is set to the string result of the\n * interpolation.\n *\n * To set an attribute instead of a property, append a `$` suffix to the\n * attribute name.\n *\n * Example:\n *\n *     html`<button class$=\"primary\">Buy Now</button>`\n *\n * To set an event handler, prefix the attribute name with `on-`:\n *\n * Example:\n *\n *     html`<button on-click=${(e)=> this.onClickHandler(e)}>Buy Now</button>`\n *\n */\nexport function render(\n    result: TemplateResult, container: Element|DocumentFragment) {\n  baseRender(result, container, extendedPartCallback);\n}\n\nexport const extendedPartCallback =\n    (instance: TemplateInstance, templatePart: TemplatePart, node: Node):\n        Part => {\n          if (templatePart.type === 'attribute') {\n            if (templatePart.rawName!.startsWith('on-')) {\n              const eventName = templatePart.rawName!.substring(3);\n              return new EventPart(instance, node as Element, eventName);\n            }\n            if (templatePart.name!.endsWith('$')) {\n              const name = templatePart.name!.substring(\n                  0, templatePart.name!.length - 1);\n              return new AttributePart(\n                  instance, node as Element, name, templatePart.strings!);\n            }\n            return new PropertyPart(\n                instance,\n                node as Element,\n                templatePart.rawName!,\n                templatePart.strings!);\n          }\n          return defaultPartCallback(instance, templatePart, node);\n        };\n\nexport class PropertyPart extends AttributePart {\n  setValue(values: any[], startIndex: number): void {\n    const s = this.strings;\n    let value: any;\n    if (s.length === 2 && s[0] === '' && s[s.length - 1] === '') {\n      // An expression that occupies the whole attribute value will leave\n      // leading and trailing empty strings.\n      value = getValue(this, values[startIndex]);\n    } else {\n      // Interpolation, so interpolate\n      value = '';\n      for (let i = 0; i < s.length; i++) {\n        value += s[i];\n        if (i < s.length - 1) {\n          value += getValue(this, values[startIndex + i]);\n        }\n      }\n    }\n    (this.element as any)[this.name] = value;\n  }\n}\n\nexport class EventPart implements Part {\n  instance: TemplateInstance;\n  element: Element;\n  eventName: string;\n  private _listener: any;\n\n  constructor(instance: TemplateInstance, element: Element, eventName: string) {\n    this.instance = instance;\n    this.element = element;\n    this.eventName = eventName;\n  }\n\n  setValue(value: any): void {\n    const listener = getValue(this, value);\n    if (listener === this._listener) {\n      return;\n    }\n    if (listener == null) {\n      this.element.removeEventListener(this.eventName, this);\n    } else if (this._listener == null) {\n      this.element.addEventListener(this.eventName, this);\n    }\n    this._listener = listener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._listener === 'function') {\n      this._listener.call(this.element, event);\n    } else if (typeof this._listener.handleEvent === 'function') {\n      this._listener.handleEvent(event);\n    }\n  }\n}\n"]}